// App.js
import React, { useState } from 'react';
import { View, StatusBar, StyleSheet } from 'react-native';
import Home from './src/screens/home';
import AddNote from './src/screens/addNote';
import EditNote from './src/screens/editNote';

const CurrentPageWidget = ({ currentPage, noteList, setCurrentPage, addNote, editNote }) => {
  switch (currentPage) {
    case 'home':
      return <Home noteList={noteList} setCurrentPage={setCurrentPage} />;
    case 'add':
      return <AddNote setCurrentPage={setCurrentPage} addNote={addNote} />;
    case 'edit':
      return <EditNote setCurrentPage={setCurrentPage} editNote={editNote} />;
    default:
      return <Home />;
  }
};

const App = () => {
  const [currentPage, setCurrentPage] = useState('home');
  const [noteList, setNoteList] = useState([{
    id: 1,
    title: 'Note pertama',
    desc: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry',
  }]);

  const addNote = (title, desc) => {
    const id = noteList.length > 0 ? noteList[noteList.length - 1].id + 1 : 1;
    setNoteList([...noteList, { id, title, desc }]);
  };

  const editNote = (id, title, desc) => {
    setNoteList(noteList.map(note => note.id === id ? { ...note, title, desc } : note));
  };

  return (
    <>
      <StatusBar barStyle="dark-content" backgroundColor="transparent" translucent />
      <CurrentPageWidget
        currentPage={currentPage}
        noteList={noteList}
        setCurrentPage={setCurrentPage}
        addNote={addNote}
        editNote={editNote}
      />
    </>
  );
};

const styles = StyleSheet.create({
  // Add any common styles here
});

export default App;




// src/components/CustomButton.js
import React from 'react';
import { TouchableOpacity, Text, StyleSheet } from 'react-native';

const CustomButton = ({ backgroundColor, color, text, onPress, fontSize = 16, width = 120 }) => {
   const styles = StyleSheet.create({
      button: {
         alignItems: 'center',
         backgroundColor,
         width,
         padding: 10,
         borderRadius: 5,
      },
      buttonText: {
         fontSize,
         fontWeight: '700',
         color,
      },
   });

   return (
      <TouchableOpacity style={styles.button} onPress={onPress}>
         <Text style={styles.buttonText}>{text}</Text>
      </TouchableOpacity>
   );
};

export default CustomButton;




// src/components/CustomTextInput.js
import React from 'react';
import { TextInput, Text, StyleSheet, View } from 'react-native';

const CustomTextInput = ({ text, onChange, label, multiline, numberOfLines }) => {
   const styles = StyleSheet.create({
      textInputWrapper: {
         marginTop: 20,
      },
      input: {
         borderWidth: 2,
         borderColor: '#DDD',
         padding: 10,
         borderRadius: 5,
      },
      label: {
         marginBottom: 5,
      }
   });

   return (
      <View style={styles.textInputWrapper}>
         <Text style={styles.label}>{label}</Text>
         <TextInput
            multiline={multiline}
            numberOfLines={numberOfLines}
            style={styles.input}
            placeholder={label}
            onChangeText={onChange}
            defaultValue={text}
         />
      </View>
   );
};

export default CustomTextInput;




// src/screens/AddNote.js
import React, { useState } from 'react';
import { View, StyleSheet, Text } from 'react-native';
import CustomButton from '../components/customButton';
import CustomTextInput from '../components/customTextInput';

const AddNote = ({ setCurrentPage, addNote }) => {
   const [title, setTitle] = useState('');
   const [desc, setDesc] = useState('');

   return (
      <View style={styles.container}>
         <Text style={styles.pageTitle}>Tambahkan Note</Text>
         <CustomTextInput
            text={title}
            onChange={setTitle}
            label="Judul"
            multiline={false}
            numberOfLines={1}
         />
         <CustomTextInput
            text={desc}
            onChange={setDesc}
            label="Deskripsi"
            multiline
            numberOfLines={4}
         />
         <View style={styles.spacerTop}>
            <CustomButton
               backgroundColor="#247881"
               color="#fff"
               text="Simpan"
               width="100%"
               onPress={() => {
                  addNote(title, desc);
                  setCurrentPage('home');
               }}
            />
         </View>
         <View style={styles.spacerTop}>
            <CustomButton
               backgroundColor="#DDDDDD"
               color="#203239"
               text="Kembali ke Home"
               width="100%"
               onPress={() => setCurrentPage('home')}
            />
         </View>
      </View>
   );
};

const styles = StyleSheet.create({
   container: {
      flex: 1,
      justifyContent: 'center',
      padding: 20,
   },
   pageTitle: {
      marginTop: 20,
      fontSize: 20,
      fontWeight: '700',
      textAlign: 'center',
      color: '#203239',
   },
   spacerTop: {
      marginTop: 30,
   },
});

export default AddNote;





// src/screens/EditNote.js
import React, { useState, useEffect } from 'react';
import { View, StyleSheet, Text } from 'react-native';
import CustomButton from '../components/customButton';
import CustomTextInput from '../components/customTextInput';

const EditNote = ({ setCurrentPage, editNote, currentNote }) => {
   const [title, setTitle] = useState(currentNote.title);
   const [desc, setDesc] = useState(currentNote.desc);

   useEffect(() => {
      setTitle(currentNote.title);
      setDesc(currentNote.desc);
   }, [currentNote]);

   return (
      <View style={styles.container}>
         <Text style={styles.pageTitle}>Ubah Note</Text>
         <CustomTextInput
            text={title}
            onChange={setTitle}
            label="Judul"
            multiline={false}
            numberOfLines={1}
         />
         <CustomTextInput
            text={desc}
            onChange={setDesc}
            label="Deskripsi"
            multiline
            numberOfLines={4}
         />
         <View style={styles.spacerTop}>
            <CustomButton
               backgroundColor="#247881"
               color="#fff"
               text="Simpan"
               width="100%"
               onPress={() => {
                  editNote(currentNote.id, title, desc);
                  setCurrentPage('home');
               }}
            />
         </View>
         <View style={styles.spacerTop}>
            <CustomButton
               backgroundColor="#DDDDDD"
               color="#203239"
               text="Kembali ke Home"
               width="100%"
               onPress={() => setCurrentPage('home')}
            />
         </View>
      </View>
   );
};

const styles = StyleSheet.create({
   container: {
      flex: 1,
      justifyContent: 'center',
      padding: 20,
   },
   pageTitle: {
      marginTop: 20,
      fontSize: 20,
      fontWeight: '700',
      textAlign: 'center',
      color: '#203239',
   },
   spacerTop: {
      marginTop: 30,
   },
});

export default EditNote;





// src/screens/Home.js
import React, { useState } from 'react';
import { FlatList, StyleSheet, View, Text, Modal } from 'react-native';
import CustomButton from '../components/customButton';

const NoteCard = ({ item, setCurrentPage, setCurrentNote, deleteNote }) => {
   const [modalVisible, setModalVisible] = useState(false);

   const handleDelete = () => {
      setModalVisible(true);
   };

   const confirmDelete = (id) => {
      deleteNote(id);
      setModalVisible(false);
   };

   return (
      <View style={styles.card}>
         <Text style={styles.cardTitle}>{item.title}</Text>
         <Text>{item.desc}</Text>
         <View style={styles.buttons}>
            <CustomButton
               backgroundColor="#FFC300"
               color="#151D3B"
               text="Ubah"
               fontSize={12}
               width={100}
               onPress={() => {
                  setCurrentNote(item);
                  setCurrentPage('edit');
               }}
            />
            <CustomButton
               backgroundColor="#D82148"
               color="#fff"
               text="Hapus"
               fontSize={12}
               width={100}
               onPress={handleDelete}
            />
         </View>
         <Modal
            transparent={true}
            visible={modalVisible}
            onRequestClose={() => setModalVisible(!modalVisible)}
         >
            <View style={styles.centeredView}>
               <View style={styles.modalView}>
                  <Text style={styles.modalText}>Apakah Anda yakin ingin menghapus catatan ini?</Text>
                  <View style={styles.modalButtons}>
                     <CustomButton
                        backgroundColor="#D82148"
                        color="#fff"
                        text="Ya"
                        fontSize={12}
                        width={100}
                        onPress={() => confirmDelete(item.id)}
                     />
                     <CustomButton
                        backgroundColor="#DDDDDD"
                        color="#203239"
                        text="Tidak"
                        fontSize={12}
                        width={100}
                        onPress={() => setModalVisible(!modalVisible)}
                     />
                  </View>
               </View>
            </View>
         </Modal>
      </View>
   );
};

const Home = ({ noteList, setCurrentPage, setCurrentNote, deleteNote }) => (
   <View style={styles.container}>
      <CustomButton
         backgroundColor="#DDD"
         color="#203239"
         text="Tambahkan Note"
         width="100%"
         onPress={() => setCurrentPage('add')}
      />
      <FlatList
         showsVerticalScrollIndicator={false}
         data={noteList}
         renderItem={({ item }) => (
            <NoteCard item={item} setCurrentPage={setCurrentPage} setCurrentNote={setCurrentNote} deleteNote={deleteNote} />
         )}
         keyExtractor={(item) => item.id.toString()}
      />
   </View>
);

const styles = StyleSheet.create({
   container: {
      flex: 1,
      padding: 20,
      marginTop: 20,
   },
   card: {
      padding: 10,
      marginVertical: 15,
      borderColor: '#DDD',
      borderWidth: 2,
      borderRadius: 5,
   },
   cardTitle: {
      fontWeight: '600',
      color: '#203239',
      fontSize: 16,
      marginBottom: 5,
   },
   buttons: {
      marginTop: 10,
      flexDirection: 'row',
      justifyContent: 'space-evenly',
   },
   centeredView: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
      marginTop: 22,
   },
   modalView: {
      margin: 20,
      backgroundColor: 'white',
      borderRadius: 20,
      padding: 35,
      alignItems: 'center',
      shadowColor: '#000',
      shadowOffset: {
         width: 0,
         height: 2,
      },
      shadowOpacity: 0.25,
      shadowRadius: 4,
      elevation: 5,
   },
   modalText: {
      marginBottom: 15,
      textAlign: 'center',
   },
   modalButtons: {
      flexDirection: 'row',
      justifyContent: 'space-between',
   },
});

export default Home;
